package IDE;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import com.borland.jbcl.layout.*;
import javax.swing.border.*;
import java.beans.*;
import javax.swing.event.*;

public class JPantalla extends JFrame {
  JPanel contentPane;
  JEditor editor;

  private final int NUEVO=0;
  private final int CERRAR=1;
  private final int CERRARTODO=2;
  private final int GUARDAR=3;
  private final int GUARDARTODO=4;
  private final int GUARDARCOMO=5;
  private final int IMPRIMIR=6;
  private final int DESHACER=7;
  private final int REHACER=8;
  private final int COPIAR=9;
  private final int PEGAR=10;
  private final int CORTAR=11;
  private final int ELIMINAR=12;
  private final int SELECCIONARTODO=13;
  private final int VERERRORES=14;
  private final int EJECUTAR=15;
  private final int SIMULAR=16;
  private final int AYUDA=17;


/* *****
Declaración de Menú
***** */
  JMenuBar jMenuBar1 = new JMenuBar();
// Menú de Archivo
  JMenu jMenuFile = new JMenu();
  JMenuItem jMenuFileNuevo = new JMenuItem();
  JMenuItem jMenuFileAbrir = new JMenuItem();
  JMenuItem jMenuFileCerrar = new JMenuItem();
  JMenuItem jMenuFileGuardar = new JMenuItem();
  JMenuItem jMenuFileGuardarComo = new JMenuItem();
  JMenuItem jMenuFileExit = new JMenuItem();
// Menú de Edición
  JMenu jMenuEditar = new JMenu();
  JMenuItem jMenuEditarDesh = new JMenuItem();
  JMenuItem jMenuEditarReh = new JMenuItem();
  JMenuItem jMenuEditarCortar = new JMenuItem();
  JMenuItem jMenuEditarCopiar = new JMenuItem();
  JMenuItem jMenuEditarPegar = new JMenuItem();
  JMenuItem jMenuEditarEliminar = new JMenuItem();
  JMenuItem jMenuEditarSelTodo = new JMenuItem();
// Menú de Vistas
  JMenu jMenuVer = new JMenu();
// Menú de Compilar
  JMenu jMenuComp = new JMenu();
  JMenuItem jMenuCompCompilar = new JMenuItem();
// Menú de Máquina Virtual
  JMenu jMenuMV = new JMenu();
  JMenuItem jMenuMVSimular = new JMenuItem();
// Menú de Archivo
  JMenu jMenuHelp = new JMenu();
  JMenuItem jMenuHelpAbout = new JMenuItem();


  JToolBar jToolBar = new JToolBar();
  JButton bNuevo = new JButton();
  JButton bAbrir = new JButton();
  JButton bCerrar = new JButton();
  JButton bGuardar = new JButton();
  JButton bGuardarTodo = new JButton();
  JButton bImprimir = new JButton();
  JButton bDeshacer = new JButton();
  JButton bRehacer = new JButton();
  JButton bCopiar = new JButton();
  JButton bPegar = new JButton();
  JButton bCortar = new JButton();
  JButton bCompilar = new JButton();
  JButton bSimular = new JButton();
  JButton bAyuda = new JButton();
  ImageIcon imgNuevo;
  ImageIcon imgAbrir;
  ImageIcon imgCerrar;
  ImageIcon imgGuardar;
  ImageIcon imgXGuardar;
  ImageIcon imgGuardarTodo;
  ImageIcon imgXGuardarTodo;
  ImageIcon imgImprimir;
  ImageIcon imgDeshacer;
  ImageIcon imgXDeshacer;
  ImageIcon imgRehacer;
  ImageIcon imgXRehacer;
  ImageIcon imgCopiar;
  ImageIcon imgXCopiar;
  ImageIcon imgPegar;
  ImageIcon imgCortar;
  ImageIcon imgXCortar;
  ImageIcon imgCompilar;
  ImageIcon imgMaqVirtual;
  ImageIcon imgAyuda;
  ImageIcon imgInfo;
  ImageIcon imgNoIcon;
  JLabel statusBar = new JLabel();
  JPanel escritorio = new JPanel();
  BorderLayout borderLayout1 = new BorderLayout();
  Border border1;
  JSplitPane jSplitPane1 = new JSplitPane();
  BorderLayout borderLayout2 = new BorderLayout();
  JTextArea viewMsg = new JTextArea();
  JCheckBoxMenuItem jCheckBoxVerErrores = new JCheckBoxMenuItem();
  JMenuItem jMenuFileCerrarTodo = new JMenuItem();
  JMenuItem jMenuFileGuardarTodo = new JMenuItem();
  TitledBorder titledBorder1;
  Border border2;
  JPanel panelArchivo = new JPanel();
  JPanel panelEditar = new JPanel();
  JPanel panelCompilar = new JPanel();
  JPanel panelMaqVirtual = new JPanel();
  JPanel panelAyuda = new JPanel();
  BoxLayout2 boxLayout21 = new BoxLayout2();
  BoxLayout2 boxLayout23 = new BoxLayout2();
  BoxLayout2 boxLayout22 = new BoxLayout2();
  JMenuItem jMenuFileImprimir = new JMenuItem();
  BoxLayout2 boxLayout24 = new BoxLayout2();
  JMenuItem jMenuHelpAyuda = new JMenuItem();
  BoxLayout2 boxLayout25 = new BoxLayout2();

  //Construct the frame
  public JPantalla() {
    enableEvents(AWTEvent.WINDOW_EVENT_MASK);
    try {
      jbInit();
    }
    catch(Exception e) {
      e.printStackTrace();
    }
  }
  //Component initialization
  private void jbInit() throws Exception  {
    imgNuevo = new ImageIcon("src/imagen/nuevo16.gif");
    imgAbrir = new ImageIcon("src/imagen/abrir16.gif");
    imgCerrar = new ImageIcon("src/imagen/cerrar16.gif");
    imgGuardar = new ImageIcon("src/imagen/guardar16.gif");
    imgXGuardar = new ImageIcon("src/imagen/xguardar16.gif");
    imgGuardarTodo = new ImageIcon("src/imagen/guardartodo16.gif");
    imgXGuardarTodo = new ImageIcon("src/imagen/xguardartodo16.gif");
    imgImprimir = new ImageIcon("src/imagen/imprimir16.gif");
    imgDeshacer = new ImageIcon("src/imagen/deshacer16.gif");
    imgXDeshacer = new ImageIcon("src/imagen/xdeshacer16.gif");
    imgRehacer = new ImageIcon("src/imagen/rehacer16.gif");
    imgXRehacer = new ImageIcon("src/imagen/xrehacer16.gif");
    imgCopiar = new ImageIcon("src/imagen/copiar16.gif");
    imgXCopiar = new ImageIcon("src/imagen/xcopiar16.gif");
    imgPegar = new ImageIcon("src/imagen/pegar16.gif");
    imgCortar = new ImageIcon("src/imagen/cortar16.gif");
    imgXCortar = new ImageIcon("src/imagen/xcortar16.gif");
    imgCompilar = new ImageIcon("src/imagen/compilar16.gif");
    imgMaqVirtual = new ImageIcon("src/imagen/simular16.gif");
    imgAyuda = new ImageIcon("src/imagen/ayuda16.gif");
    imgInfo = new ImageIcon("src/imagen/info16.gif");
    imgNoIcon = new ImageIcon("src/imagen/no_icon16.gif");
    //setIconImage(Toolkit.getDefaultToolkit().createImage(Frame1.class.getResource("[Your Icon]")));
    contentPane = (JPanel) this.getContentPane();
    border1 = new EtchedBorder(EtchedBorder.RAISED,new Color(82, 157, 235),new Color(40, 77, 115));
    titledBorder1 = new TitledBorder("");
    contentPane.setLayout(borderLayout1);
    this.setSize(new Dimension(800, 600));
    this.setTitle("Age2000");
    this.addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowClosing(WindowEvent e) {
        this_windowClosing(e);
      }
    });
    statusBar.setText(" ");
// Archivo
    jMenuFile.setActionCommand("Archivo");
    jMenuFile.setMnemonic('A');
    jMenuFile.setText("Archivo");
    jMenuFileNuevo.setIcon(imgNuevo);
    jMenuFileNuevo.setMnemonic('N');
    jMenuFileNuevo.setText("Nuevo");
    jMenuFileNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(78, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuFileNuevo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileNuevo_actionPerformed(e);
      }
    });
    jMenuFileAbrir.setIcon(imgAbrir);
    jMenuFileAbrir.setMnemonic('A');
    jMenuFileAbrir.setText("Abrir...");
    jMenuFileAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(65, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuFileAbrir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileAbrir_actionPerformed(e);
      }
    });
    jMenuFileCerrar.setIcon(imgCerrar);
    jMenuFileCerrar.setMnemonic('C');
    jMenuFileCerrar.setText("Cerrar");
    jMenuFileCerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(115, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuFileCerrar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileCerrar_actionPerformed(e);
      }
    });
    jMenuFileGuardar.setDisabledIcon(imgXGuardar);
    jMenuFileGuardar.setIcon(imgGuardar);
    jMenuFileGuardar.setMnemonic('G');
    jMenuFileGuardar.setText("Guardar");
    jMenuFileGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(71, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuFileGuardar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileGuardar_actionPerformed(e);
      }
    });
    jMenuFileGuardarComo.setDisabledIcon(imgXGuardarTodo);
    jMenuFileGuardarComo.setIcon(imgNoIcon);
    jMenuFileGuardarComo.setText("Guardar como...");
    jMenuFileGuardarComo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileGuardarComo_actionPerformed(e);
      }
    });
    jMenuFileExit.setIcon(imgNoIcon);
    jMenuFileExit.setMnemonic('S');
    jMenuFileExit.setText("Salir");
// Editar
    jMenuEditar.setMnemonic('E');
    jMenuEditar.setText("Editar");
    jMenuEditarDesh.setDisabledIcon(imgXDeshacer);
    jMenuEditarDesh.setIcon(imgDeshacer);
    jMenuEditarDesh.setMnemonic('D');
    jMenuEditarDesh.setText("Deshacer");
    jMenuEditarDesh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(90, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarDesh.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarDesh_actionPerformed(e);
      }
    });
    jMenuEditarReh.setDisabledIcon(imgXRehacer);
    jMenuEditarReh.setIcon(imgRehacer);
    jMenuEditarReh.setMnemonic('R');
    jMenuEditarReh.setText("Rehacer");
    jMenuEditarReh.setAccelerator(javax.swing.KeyStroke.getKeyStroke(89, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarReh.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarReh_actionPerformed(e);
      }
    });
    jMenuEditarCortar.setDisabledIcon(imgXCortar);
    jMenuEditarCortar.setIcon(imgCortar);
    jMenuEditarCortar.setMnemonic('T');
    jMenuEditarCortar.setText("Cortar");
    jMenuEditarCortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(88, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarCortar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarCortar_actionPerformed(e);
      }
    });
    jMenuEditarCopiar.setDisabledIcon(imgXCopiar);
    jMenuEditarCopiar.setIcon(imgCopiar);
    jMenuEditarCopiar.setMnemonic('C');
    jMenuEditarCopiar.setText("Copiar");
    jMenuEditarCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(67, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarCopiar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarCopiar_actionPerformed(e);
      }
    });
    jMenuEditarPegar.setIcon(imgPegar);
    jMenuEditarPegar.setMnemonic('P');
    jMenuEditarPegar.setText("Pegar");
    jMenuEditarPegar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(86, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarPegar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarPegar_actionPerformed(e);
      }
    });
    jMenuEditarEliminar.setIcon(imgNoIcon);
    jMenuEditarEliminar.setMnemonic('E');
    jMenuEditarEliminar.setText("Eliminar");
    jMenuEditarEliminar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarEliminar_actionPerformed(e);
      }
    });
    jMenuEditarSelTodo.setIcon(imgNoIcon);
    jMenuEditarSelTodo.setMnemonic('S');
    jMenuEditarSelTodo.setText("Seleccionar Todo");
    jMenuEditarSelTodo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(69, java.awt.event.KeyEvent.CTRL_MASK, false));
    jMenuEditarSelTodo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarSelTodo_actionPerformed(e);
      }
    });
// Vistas
    jMenuVer.setText("Ver");
// Compilar
    jMenuComp.setMnemonic('C');
    jMenuComp.setText("Compilar");
    jMenuCompCompilar.setDisabledIcon(null);
    jMenuCompCompilar.setIcon(imgCompilar);
    jMenuCompCompilar.setMnemonic('E');
    jMenuCompCompilar.setText("Ejecutar");
    jMenuCompCompilar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(120, 0, false));
    jMenuCompCompilar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuCompCompilar_actionPerformed(e);
      }
    });
// Máquina Virtual
    jMenuMV.setText("Máquina Virtual");
    jMenuMVSimular.setIcon(imgMaqVirtual);
    jMenuMVSimular.setText("Simular");

    jMenuFileExit.addActionListener(new ActionListener()  {
      public void actionPerformed(ActionEvent e) {
        jMenuFileExit_actionPerformed(e);
      }
    });
    jMenuHelp.setText("Ayuda");
    jMenuHelpAbout.setIcon(imgInfo);
    jMenuHelpAbout.setText("Acerca de...");
    jMenuHelpAbout.addActionListener(new ActionListener()  {
      public void actionPerformed(ActionEvent e) {
        jMenuHelpAbout_actionPerformed(e);
      }
    });
    bAbrir.setIcon(imgAbrir);
    bAbrir.setMnemonic('0');
    bAbrir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileAbrir_actionPerformed(e);
      }
    });
    bAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
// Configuración de los botones de las barras de Acceso
    bAbrir.setBorder(BorderFactory.createRaisedBevelBorder());
    bAbrir.setToolTipText("Abrir Archivo");
    bAbrir.setBorderPainted(false);
    bAbrir.setFocusPainted(false);
    bCerrar.setIcon(imgCerrar);
    bCerrar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileCerrar_actionPerformed(e);
      }
    });
    bCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bCerrar.setBorder(BorderFactory.createRaisedBevelBorder());
    bCerrar.setToolTipText("Cerrar Archivo");
    bCerrar.setBorderPainted(false);
    bCerrar.setFocusPainted(false);
    bAyuda.setIcon(imgAyuda);
    bAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bAyuda.setBorder(BorderFactory.createRaisedBevelBorder());
    bAyuda.setToolTipText("Ayuda");
    bAyuda.setBorderPainted(false);
    bAyuda.setFocusPainted(false);
// Configuración del escritorio
    escritorio.setBackground(new Color(58, 110, 165));
    escritorio.setLayout(borderLayout2);
    jSplitPane1.setOrientation(JSplitPane.VERTICAL_SPLIT);
    jSplitPane1.setBorder(null);
    jSplitPane1.setContinuousLayout(true);
    jCheckBoxVerErrores.setText("Errores");
    jCheckBoxVerErrores.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jCheckBoxVerErrores_actionPerformed(e);
      }
    });
    jMenuFileCerrarTodo.setIcon(imgNoIcon);
    jMenuFileCerrarTodo.setMnemonic('T');
    jMenuFileCerrarTodo.setText("Cerrar Todo");
    jMenuFileCerrarTodo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileCerrarTodo_actionPerformed(e);
      }
    });
    jMenuFileGuardarTodo.setIcon(imgGuardarTodo);
    jMenuFileGuardarTodo.setMnemonic('D');
    jMenuFileGuardarTodo.setText("Guardar Todo");
    jMenuFileGuardarTodo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileGuardarTodo_actionPerformed(e);
      }
    });
    bNuevo.setBorder(BorderFactory.createRaisedBevelBorder());
    bNuevo.setToolTipText("Nuevo Archivo");
    bNuevo.setBorderPainted(false);
    bNuevo.setFocusPainted(false);
    bNuevo.setIcon(imgNuevo);
    bNuevo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileNuevo_actionPerformed(e);
      }
    });
    bNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bGuardar.setBorder(BorderFactory.createRaisedBevelBorder());
    bGuardar.setToolTipText("Guardar Archivo");
    bGuardar.setBorderPainted(false);
    bGuardar.setDisabledIcon(imgXGuardar);
    bGuardar.setFocusPainted(false);
    bGuardar.setIcon(imgGuardar);
    bGuardar.setMnemonic('0');
    bGuardar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileGuardar_actionPerformed(e);
      }
    });
    bGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    panelArchivo.setBorder(BorderFactory.createEtchedBorder());
    panelArchivo.setLayout(boxLayout21);
    panelEditar.setBorder(BorderFactory.createEtchedBorder());
    panelEditar.setLayout(boxLayout22);
    panelAyuda.setLayout(boxLayout23);
    bDeshacer.setBorder(BorderFactory.createRaisedBevelBorder());
    bDeshacer.setToolTipText("Deshacer");
    bDeshacer.setBorderPainted(false);
    bDeshacer.setDisabledIcon(imgXDeshacer);
    bDeshacer.setFocusPainted(false);
    bDeshacer.setIcon(imgDeshacer);
    bDeshacer.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarDesh_actionPerformed(e);
      }
    });
    bDeshacer.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bRehacer.setBorder(BorderFactory.createRaisedBevelBorder());
    bRehacer.setToolTipText("Rehacer");
    bRehacer.setBorderPainted(false);
    bRehacer.setDisabledIcon(imgXRehacer);
    bRehacer.setFocusPainted(false);
    bRehacer.setIcon(imgRehacer);
    bRehacer.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarReh_actionPerformed(e);
      }
    });
    bRehacer.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bCopiar.setBorder(BorderFactory.createRaisedBevelBorder());
    bCopiar.setToolTipText("Copiar");
    bCopiar.setBorderPainted(false);
    bCopiar.setDisabledIcon(imgXCopiar);
    bCopiar.setFocusPainted(false);
    bCopiar.setIcon(imgCopiar);
    bCopiar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarCopiar_actionPerformed(e);
      }
    });
    bCopiar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bPegar.setBorder(BorderFactory.createRaisedBevelBorder());
    bPegar.setToolTipText("Pegar");
    bPegar.setBorderPainted(false);
    bPegar.setDisabledIcon(null);
    bPegar.setFocusPainted(false);
    bPegar.setIcon(imgPegar);
    bPegar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarPegar_actionPerformed(e);
      }
    });
    bPegar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bCortar.setBorder(BorderFactory.createRaisedBevelBorder());
    bCortar.setToolTipText("Cortar");
    bCortar.setBorderPainted(false);
    bCortar.setDisabledIcon(imgXCortar);
    bCortar.setFocusPainted(false);
    bCortar.setIcon(imgCortar);
    bCortar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuEditarCortar_actionPerformed(e);
      }
    });
    bCortar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    bGuardarTodo.setBorder(BorderFactory.createRaisedBevelBorder());
    bGuardarTodo.setToolTipText("Guardar Todo");
    bGuardarTodo.setBorderPainted(false);
    bGuardarTodo.setDisabledIcon(imgXGuardarTodo);
    bGuardarTodo.setFocusPainted(false);
    bGuardarTodo.setIcon(imgGuardarTodo);
    bGuardarTodo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileGuardarTodo_actionPerformed(e);
      }
    });
    bGuardarTodo.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    jMenuFileImprimir.setIcon(imgImprimir);
    jMenuFileImprimir.setMnemonic('I');
    jMenuFileImprimir.setText("Imprimir...");
    jMenuFileImprimir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileImprimir_actionPerformed(e);
      }
    });
    bImprimir.setBorder(BorderFactory.createRaisedBevelBorder());
    bImprimir.setToolTipText("Imprimir");
    bImprimir.setBorderPainted(false);
    bImprimir.setFocusPainted(false);
    bImprimir.setIcon(imgImprimir);
    bImprimir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuFileImprimir_actionPerformed(e);
      }
    });
    bImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    panelAyuda.setBorder(BorderFactory.createEtchedBorder());
    panelCompilar.setBorder(BorderFactory.createEtchedBorder());
    panelCompilar.setLayout(boxLayout24);
    bCompilar.setBorder(BorderFactory.createRaisedBevelBorder());
    bCompilar.setToolTipText("Ejecutar");
    bCompilar.setBorderPainted(false);
    bCompilar.setDisabledIcon(null);
    bCompilar.setFocusPainted(false);
    bCompilar.setIcon(imgCompilar);
    bCompilar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(ActionEvent e) {
        jMenuCompCompilar_actionPerformed(e);
      }
    });
    bCompilar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    jMenuHelpAyuda.setIcon(imgAyuda);
    jMenuHelpAyuda.setText("Ayuda...");
    jMenuHelpAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(112, 0, false));
    panelMaqVirtual.setBorder(BorderFactory.createEtchedBorder());
    panelMaqVirtual.setLayout(boxLayout25);
    bSimular.setBorder(BorderFactory.createRaisedBevelBorder());
    bSimular.setToolTipText("Simular");
    bSimular.setBorderPainted(false);
    bSimular.setFocusPainted(false);
    bSimular.setIcon(imgMaqVirtual);
    bSimular.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(MouseEvent e) {
        botonEnter(e);
      }
      public void mouseExited(MouseEvent e) {
        botonExited(e);
      }
      public void mousePressed(MouseEvent e) {
        botonPressed(e);
      }
      public void mouseReleased(MouseEvent e) {
        botonReleased(e);
      }
    });
    viewMsg.setEditable(false);
    jToolBar.add(panelArchivo, null);
    panelArchivo.add(bNuevo, null);
    panelArchivo.add(bAbrir, null);
    panelArchivo.add(bCerrar, null);
    panelArchivo.add(bGuardar, null);
    panelArchivo.add(bGuardarTodo, null);
    panelArchivo.add(bImprimir, null);
    jToolBar.add(panelEditar, null);
    panelEditar.add(bDeshacer, null);
    panelEditar.add(bRehacer, null);
    panelEditar.add(bCopiar, null);
    panelEditar.add(bPegar, null);
    panelEditar.add(bCortar, null);
    jToolBar.add(panelCompilar, null);
    panelCompilar.add(bCompilar);
    jToolBar.add(panelMaqVirtual, null);
    panelMaqVirtual.add(bSimular);
    jToolBar.add(panelAyuda, null);
    panelAyuda.add(bAyuda);
// Menú - Archivo
    jMenuFile.add(jMenuFileNuevo);
    jMenuFile.addSeparator();
    jMenuFile.add(jMenuFileAbrir);
    jMenuFile.add(jMenuFileCerrar);
    jMenuFile.add(jMenuFileCerrarTodo);
    jMenuFile.addSeparator();
    jMenuFile.add(jMenuFileGuardar);
    jMenuFile.add(jMenuFileGuardarComo);
    jMenuFile.add(jMenuFileGuardarTodo);
    jMenuFile.addSeparator();
    jMenuFile.add(jMenuFileImprimir);
    jMenuFile.addSeparator();
    jMenuFile.add(jMenuFileExit);
// Menú - Editar
    jMenuEditar.add(jMenuEditarDesh);
    jMenuEditar.add(jMenuEditarReh);
    jMenuEditar.addSeparator();
    jMenuEditar.add(jMenuEditarCortar);
    jMenuEditar.add(jMenuEditarCopiar);
    jMenuEditar.add(jMenuEditarPegar);
    jMenuEditar.add(jMenuEditarEliminar);
    jMenuEditar.addSeparator();
    jMenuEditar.add(jMenuEditarSelTodo);
// Menú - Ver
// Menú - Compilar
    jMenuComp.add(jMenuCompCompilar);
// Menú - Máquina Virtual
    jMenuMV.add(jMenuMVSimular);
// Menú - Ayuda...
    jMenuHelp.add(jMenuHelpAyuda);
    jMenuHelp.add(jMenuHelpAbout);
// Agregar en la Barra de Menú
    jMenuBar1.add(jMenuFile);
    jMenuBar1.add(jMenuEditar);
    jMenuBar1.add(jMenuVer);
    jMenuBar1.add(jMenuComp);
    jMenuBar1.add(jMenuMV);
    jMenuBar1.add(jMenuHelp);
    editor = new JEditor();
// Monta todo los componentes: Menú, ventanas, barra de tareas, etc, sobre el contentPane
    this.setJMenuBar(jMenuBar1);
/*    contentPane.add(jToolBar, BorderLayout.NORTH);
    contentPane.add(statusBar, BorderLayout.SOUTH);
    contentPane.add(jPanel1, BorderLayout.CENTER);
    contentPane.add(jPanel2, BorderLayout.BEFORE_LINE_BEGINS);*/
    contentPane.add(jToolBar, BorderLayout.NORTH);
    contentPane.add(statusBar, BorderLayout.SOUTH);
    contentPane.add(escritorio, BorderLayout.CENTER);
    escritorio.add(jSplitPane1,  BorderLayout.CENTER);
    editor.setVisible(true);
    viewMsg.setVisible(false);
    jSplitPane1.add(editor, JSplitPane.LEFT);
    jSplitPane1.add(viewMsg, JSplitPane.RIGHT);
    jMenuVer.add(jCheckBoxVerErrores);
    jSplitPane1.setDividerLocation(400);
    validar(0);
    editor.initPantalla(this);
  }
  //File | Exit action performed
  public void jMenuFileExit_actionPerformed(ActionEvent e) {
    editor.cerrarTodo();
    System.exit(0);
  }
  //Help | About action performed
  public void jMenuHelpAbout_actionPerformed(ActionEvent e) {
    JAboutBox dlg = new JAboutBox(this);
    Dimension dlgSize = dlg.getPreferredSize();
    Dimension frmSize = getSize();
    Point loc = getLocation();
    dlg.setLocation((frmSize.width - dlgSize.width) / 2 + loc.x, (frmSize.height - dlgSize.height) / 2 + loc.y);
    dlg.setModal(true);
    dlg.show();
  }
  //Overridden so we can exit when window is closed
  protected void processWindowEvent(WindowEvent e) {
    super.processWindowEvent(e);
    if (e.getID() == WindowEvent.WINDOW_CLOSING) {
      jMenuFileExit_actionPerformed(null);
    }
  }

  void jMenuFileNuevo_actionPerformed(ActionEvent e) {
  if(!editor.isShowing())
    editor.setVisible(true);
  editor.nuevoPrograma();
  jSplitPane1.setDividerLocation(400);
  validar(1);
  }

  void jMenuFileAbrir_actionPerformed(ActionEvent e) {
  editor.abrirPrograma();
  validar(1);
  }

  void jMenuFileCerrar_actionPerformed(ActionEvent e) {
  editor.cerrarPrograma();
  validar(5);
  }

// Aparece/Desaparece la ventana de mensajes de error según sea el caso
  void jCheckBoxVerErrores_actionPerformed(ActionEvent e) {
  viewMsg.setVisible(jCheckBoxVerErrores.isSelected());
  jSplitPane1.setDividerLocation(400);
  }

  private void guardarProg(){
  editor.guardarPrograma();
  validar(2);

  }

  void jMenuFileGuardar_actionPerformed(ActionEvent e) {
  guardarProg();
  }

  void jMenuFileGuardarComo_actionPerformed(ActionEvent e) {
  editor.guardarComoPrograma();
  }

  void jMenuFileCerrarTodo_actionPerformed(ActionEvent e) {
  editor.cerrarTodo();
  validar(5);
  }

  void jMenuFileGuardarTodo_actionPerformed(ActionEvent e) {
  editor.guardarTodo();
  validar(2);
  }

  void jMenuEditarPegar_actionPerformed(ActionEvent e) {
  editor.pegar();
  }

  void jMenuEditarCopiar_actionPerformed(ActionEvent e) {
  editor.copiar();
  validar(12);
  }

  void jMenuEditarCortar_actionPerformed(ActionEvent e) {
  editor.cortar();
  validar(11);
  validar(12);
  }

  void jMenuEditarSelTodo_actionPerformed(ActionEvent e) {
  editor.seleccionarTodo();
  }

  void jMenuEditarEliminar_actionPerformed(ActionEvent e) {
  editor.eliminar();
  }

  private void botonExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonExited
  javax.swing.JButton temp = (javax.swing.JButton) evt.getComponent();
  if(temp.isEnabled()){
      temp.setBorder(BorderFactory.createRaisedBevelBorder());
      temp.setBorderPainted(false);
  }
  }//GEN-LAST:event_botonExited

  private void botonEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEnter
  javax.swing.JButton temp = (javax.swing.JButton) evt.getComponent();
  if(temp.isEnabled()){
        temp.setBorder(BorderFactory.createRaisedBevelBorder());
        temp.setBorderPainted(true);
  }
  }///GEN-LAST:event_botonEnter

  private void botonPressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonExited
  javax.swing.JButton temp = (javax.swing.JButton) evt.getComponent();
  if(temp.isEnabled())  temp.setBorder(BorderFactory.createLoweredBevelBorder());
  }///GEN-LAST:event_botonExited

  private void botonReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonExited
  javax.swing.JButton temp = (javax.swing.JButton) evt.getComponent();
  if(temp.isEnabled())  temp.setBorder(BorderFactory.createRaisedBevelBorder());
  }

  void jMenuEditarDesh_actionPerformed(ActionEvent e) {
  editor.deshacer();
  }

  void jMenuEditarReh_actionPerformed(ActionEvent e) {
  editor.rehacer();
  }

  void jMenuFileImprimir_actionPerformed(ActionEvent e) {
  editor.imprimirPrograma();
  }

  public void validar(int fase){
  switch(fase){
    case 0:// VALORES INICIALES DE VALIDACIÓN - NO SOBRE BOTÓN
            Enabled(NUEVO, true);
            Enabled(CERRAR, false);
            Enabled(CERRARTODO, false);
            Enabled(GUARDAR, false);
            Enabled(GUARDARCOMO, false);
            Enabled(GUARDARTODO, false);
            Enabled(IMPRIMIR, false);
            Enabled(DESHACER, false);
            Enabled(REHACER, false);
            Enabled(COPIAR, false);
            Enabled(PEGAR, false);
            Enabled(CORTAR, false);
            Enabled(ELIMINAR, false);
            Enabled(SELECCIONARTODO, false);
            Enabled(VERERRORES, false);
            Enabled(EJECUTAR, false);
            Enabled(SIMULAR, false);
            break;
    case 1:// VALORES DE UN NUEVO PROGRAMA DE VALIDACIÓN - NO SOBRE BOTÓN
            Enabled(CERRAR, true);
            Enabled(CERRARTODO, true);
            Enabled(GUARDAR, false);
            Enabled(GUARDARCOMO, true);
            Enabled(IMPRIMIR, true);
            Enabled(SELECCIONARTODO, true);
            Enabled(VERERRORES, true);
            Enabled(EJECUTAR, true);
            break;
    case 2:// VALORES CUANDO EXISTEN CAMBIOS Y CLICK SOBRE BOTÓN GUARDAR
            if(!editor.getModificado()){
                Enabled(GUARDAR, false);
                bGuardar.setBorderPainted(false);
                if(!editor.getGuardarTodo()){
                    Enabled(GUARDARTODO, false);
                    bGuardarTodo.setBorderPainted(false);
                }
            }
            break;
    case 3:// VALORES CUANDO MODIFICADO = TRUE - NO SOBRE BOTÓN
            Enabled(GUARDAR, true);
            Enabled(GUARDARTODO, true);
            break;
    case 4:// VALORES CUANDO EXISTEN CAMBIOS - NO SOBRE BOTÓN
            if(editor.getModificado()){
                Enabled(GUARDAR, true);
            }
            else{// VALORES CUANDO LOS CAMBIOS SE GUARDAN
                Enabled(GUARDAR, false);
            }
            break;
    case 5:// VALORES CUANDO SE CIERRAN PROGRAMAS - CLICK SOBRE BOTÓN CERRAR
            if(editor.getCountProgramas()==0){
                Enabled(CERRAR, false);
                bCerrar.setBorderPainted(false);
                Enabled(CERRARTODO, false);
                Enabled(GUARDAR, false);
                Enabled(GUARDARTODO, false);
                Enabled(GUARDARCOMO, false);
                Enabled(IMPRIMIR, false);
                Enabled(DESHACER, false);
                Enabled(REHACER, false);
                Enabled(COPIAR, false);
                Enabled(PEGAR, false);
                Enabled(CORTAR, false);
                Enabled(ELIMINAR, false);
                Enabled(SELECCIONARTODO, false);
                Enabled(EJECUTAR, false);
                Enabled(SIMULAR, false);
            }
            break;
    case 6:// VALORES DE MENU EDITAR DESHACER - TRUE
            Enabled(DESHACER, true);
            break;
    case 7:// VALORES DE MENU EDITAR DESHACER - FALSE
            Enabled(DESHACER, false);
            bDeshacer.setBorderPainted(false);
            break;
    case 8:// VALORES DE MENU EDITAR REHACER - TRUE
            Enabled(REHACER, true);
            break;
    case 9:// VALORES DE MENU EDITAR RESHACER - FALSE
            Enabled(REHACER, false);
            bRehacer.setBorderPainted(false);
            break;
    case 10:// VALORES DE MENU EDITAR COPIAR - CORTAR
            Enabled(COPIAR, true);
            Enabled(CORTAR, true);
            Enabled(ELIMINAR, true);
            break;
    case 11:// VALORES DE MENU EDITAR COPIAR - CORTAR
            Enabled(COPIAR, false);
            bCopiar.setBorderPainted(false);
            Enabled(CORTAR, false);
            bCortar.setBorderPainted(false);
            Enabled(ELIMINAR, false);
            break;
    case 12:// VALORES DE MENU EDITAR COPIAR - PEGAR - CORTAR
            Enabled(PEGAR, true);
            break;
    case 13:// VALORES DE MENU EDITAR COPIAR - PEGAR - CORTAR
            Enabled(PEGAR, false);
            bPegar.setBorderPainted(false);
            break;
  }
  }

  private void Enabled(int boton, boolean valor){
  switch(boton){
    case NUEVO: // NUEVO
            bNuevo.setEnabled(valor);
            jMenuFileNuevo.setEnabled(valor);
            break;
    case CERRAR: // CERRAR
            bCerrar.setEnabled(valor);
            jMenuFileCerrar.setEnabled(valor);
            break;
    case CERRARTODO: // CERRAR
            jMenuFileCerrarTodo.setEnabled(valor);
            break;
    case GUARDAR: // GUARDAR
            bGuardar.setEnabled(valor);
            jMenuFileGuardar.setEnabled(valor);
            break;
    case GUARDARTODO: // GUARDAR TODO
            bGuardarTodo.setEnabled(valor);
            jMenuFileGuardarTodo.setEnabled(valor);
            break;
    case GUARDARCOMO: // GUARDAR COMO...
            jMenuFileGuardarComo.setEnabled(valor);
            break;
    case IMPRIMIR: // GUARDAR TODO
            bImprimir.setEnabled(valor);
            jMenuFileImprimir.setEnabled(valor);
            break;
    case DESHACER: // DESHACER
            bDeshacer.setEnabled(valor);
            jMenuEditarDesh.setEnabled(valor);
            break;
    case REHACER: // REHACER
            bRehacer.setEnabled(valor);
            jMenuEditarReh.setEnabled(valor);
            break;
    case COPIAR: // COPIAR
            bCopiar.setEnabled(valor);
            jMenuEditarCopiar.setEnabled(valor);
            break;
    case PEGAR: // PEGAR
            bPegar.setEnabled(valor);
            jMenuEditarPegar.setEnabled(valor);
            break;
    case CORTAR: // CORTAR
            bCortar.setEnabled(valor);
            jMenuEditarCortar.setEnabled(valor);
            break;
    case ELIMINAR: // CORTAR
            jMenuEditarEliminar.setEnabled(valor);
            break;
    case SELECCIONARTODO:
            jMenuEditarSelTodo.setEnabled(valor);
            break;
    case VERERRORES:
            jCheckBoxVerErrores.setEnabled(valor);
            break;
    case EJECUTAR:
            bCompilar.setEnabled(valor);
            jMenuCompCompilar.setEnabled(valor);
            break;
    case SIMULAR:
            bSimular.setEnabled(valor);
            jMenuMVSimular.setEnabled(valor);
            break;
    case AYUDA:// AYUDA
            bAyuda.setEnabled(valor);
            jMenuHelpAyuda.setEnabled(valor);
            break;
  }
  }

  void this_windowClosing(WindowEvent e) {
    editor.cerrarTodo();
  }

  void jMenuCompCompilar_actionPerformed(ActionEvent e) {
  guardarProg();
  editor.ejecutar();
  }

}// FIN JPANTALLA