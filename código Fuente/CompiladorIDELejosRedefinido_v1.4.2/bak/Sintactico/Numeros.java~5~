package Sintactico;


public class Numeros {
  private Sintactico.AnalizadorSintactico sintactico;
  private int follow_set[]={21,22,12,8,13,9,15,11,124};//num,variable, op_logicos, inicio
  private int header_set[]={113,102,108,122};// finConducta,acciones,entonces,hacer

  public Numeros(Sintactico.AnalizadorSintactico sint){
  sintactico = sint;
  }

  public void analisis()throws Exception{
  try{
    int tipo=0;
    if(sintactico.compara(22)){ // Si es una variable
      tipo = sintactico.getTipoVariable(); // qué tipo de variable es
      switch(tipo){
        case 7:sintactico.existe_var_numero(7, follow_set, header_set);
               break;
        case 8:sintactico.existe_var_numero(8, follow_set, header_set);
               break;
      }

    }
    else{
      if (sintactico.compara(21))
        sintactico.comparar(21);
      else{
        if(sintactico.compara(25))
          sintactico.comparar(25);
        else
          sintactico.error("No especificó un identificador de tipo entero");
      }
    }
  }
  catch(Sintactico.ExcepcionPR ex){
    sintactico.error("No se permite usar Palabras Reservadas como variables");
  }
  catch(Sintactico.ExcepcionAtras ex){
    sintactico.error("No especificó un numérico en la condición");
 }

  }//fin de analisis()
}

/*


   public void analisis()throws Exception{
   try{
       if(sintactico.compara(22)){ // si es una variable
         sintactico.existe_var_numero(7, follow_set, header_set);
         }
       else
         if(sintactico.compara(21)){ // si es el valor entero
           sintactico.comparar(21);}
         else
           sintactico.error("No especificó un identificador de tipo entero");
   }
   catch(Sintactico.ExcepcionPR ex){
     sintactico.error("No se permite usar Palabras Reservadas como variables");
   }
   catch(Sintactico.ExcepcionAtras ex){
     sintactico.error("No especificó un tipo entero en la condición");
   }

   }//fin de analisis()


*/
